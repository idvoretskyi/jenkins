<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <logRotator>
    <daysToKeep>180</daysToKeep>
    <numToKeep>-1</numToKeep>
    <artifactDaysToKeep>-1</artifactDaysToKeep>
    <artifactNumToKeep>-1</artifactNumToKeep>
  </logRotator>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>GIT_REF</name>
          <description></description>
          <defaultValue>next</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>osx_build</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers class="vector"/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>test &quot;`sw_vers -productVersion`&quot; == 10.7.5  || (
  echo OS X builds need to be built on OS X 10.7.5
  false
)

# This shouldn&apos;t really be here, but it works
PATH=/usr/local/git/bin:/usr/local/share/npm/bin:/usr/local/bin:$PATH

test -d .git || ( git init &amp;&amp; git remote add origin https://github.com/rethinkdb/rethinkdb.git )

git fetch origin $GIT_REF
git checkout -f FETCH_HEAD

# Clean any artifacts from previous builds
rm -f build_output.tar.gz || true
rm *.dmg || true
cd src; make clean; cd -
rm -rf build || true
make osx

# rename the dmg
VER=&quot;`scripts/gen-version.sh`&quot;
mv build/packaging/osx/rethinkdb.dmg rethinkdb-&quot;$VER&quot;.dmg

# Create zip of build results and files needed for test
# tar czf build_output.tar.gz build/release/rethinkdb build/release/ build/drivers drivers</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>*.dmg</artifacts>
      <latestOnly>false</latestOnly>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers/>
</project>